{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: validated ? styles.item : styles.fail,\n    children: _jsx(Text, {\n      children: title\n    })\n  });\n};\n\nexport default function Projects(_ref2) {\n  var route = _ref2.route;\n  var userData = route.params.userData;\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item,\n        valida = _ref3.valida;\n    return _jsx(Item, {\n      title: item.project.name,\n      validated: item.validated\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      children: [_jsx(FlatList, {\n        data: userData.projects_users,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(Text, {\n        children: \"projects\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  userimage: {\n    borderRadius: \"100%\",\n    width: 100,\n    height: 100\n  },\n  Button: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80vw'\n  },\n  scrollView: {\n    width: '100%',\n    padding: 10\n  },\n  item: {\n    borderRadius: 10,\n    backgroundColor: 'lightgreen',\n    padding: 10,\n    margin: 10\n  },\n  fail: {\n    borderRadius: 10,\n    backgroundColor: 'red',\n    padding: 10,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/goinfre/oes-safi/swifty-companion/components/Infos/projects.js"],"names":["React","Item","title","validated","styles","item","fail","Projects","route","userData","params","renderItem","valida","project","name","container","scrollView","projects_users","id","StyleSheet","create","flex","alignItems","userimage","borderRadius","width","height","Button","backgroundColor","justifyContent","padding","margin"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACX,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,SAAS,GAAGC,MAAM,CAACC,IAAV,GAAiBD,MAAM,CAACE,IAA9C;AAAA,cACE,KAAC,IAAD;AAAA,gBAAQJ;AAAR;AADF,IADW;AAAA,CAAb;;AAMA,eAAe,SAASK,QAAT,QAA6B;AAAA,MAATC,KAAS,SAATA,KAAS;AAC1C,MAAQC,QAAR,GAAqBD,KAAK,CAACE,MAA3B,CAAQD,QAAR;;AAEA,MAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,QAAGN,IAAH,SAAGA,IAAH;AAAA,QAASO,MAAT,SAASA,MAAT;AAAA,WACjB,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEP,IAAI,CAACQ,OAAL,CAAaC,IAA1B;AAAgC,MAAA,SAAS,EAAET,IAAI,CAACF;AAAhD,MADiB;AAAA,GAAnB;;AAGA,SACE,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACW,SAA5B;AAAA,cACE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAEX,MAAM,CAACY,UAA1B;AAAA,iBACA,KAAC,QAAD;AACE,QAAA,IAAI,EAAEP,QAAQ,CAACQ,cADjB;AAEE,QAAA,UAAU,EAAEN,UAFd;AAGE,QAAA,YAAY,EAAE,sBAAAN,IAAI;AAAA,iBAAIA,IAAI,CAACa,EAAT;AAAA;AAHpB,QADA,EAMA,KAAC,IAAD;AAAA;AAAA,QANA;AAAA;AADF,IADF;AAYD;AAED,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADkB;AAM7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE,MADL;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,MAAM,EAAE;AAHC,GANkB;AAW7BC,EAAAA,MAAM,EAAE;AACNN,IAAAA,IAAI,EAAE,CADA;AAENO,IAAAA,eAAe,EAAE,MAFX;AAGNN,IAAAA,UAAU,EAAE,QAHN;AAINO,IAAAA,cAAc,EAAE,QAJV;AAKNJ,IAAAA,KAAK,EAAE;AALD,GAXqB;AAkB7BT,EAAAA,UAAU,EAAE;AACVS,IAAAA,KAAK,EAAE,MADG;AAEVK,IAAAA,OAAO,EAAE;AAFC,GAlBiB;AAsB7BzB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,YAAY,EAAE,EADV;AAEJI,IAAAA,eAAe,EAAE,YAFb;AAGJE,IAAAA,OAAO,EAAE,EAHL;AAIJC,IAAAA,MAAM,EAAE;AAJJ,GAtBuB;AA4B7BzB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,YAAY,EAAE,EADV;AAEJI,IAAAA,eAAe,EAAE,KAFb;AAGJE,IAAAA,OAAO,EAAE,EAHL;AAIJC,IAAAA,MAAM,EAAE;AAJJ;AA5BuB,CAAlB,CAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, FlatList, Text, ScrollView, View, SafeAreaView, Image } from 'react-native';\n\n\nconst Item = ({ title }) => (\n  <View style={validated ? styles.item : styles.fail }>\n    <Text >{title}</Text>\n  </View>\n);\n\nexport default function Projects({ route }) {\n  const { userData } = route.params;\n\n  const renderItem = ({ item, valida }) => (\n    <Item title={item.project.name} validated={item.validated} />\n  );\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.scrollView}>\n      <FlatList\n        data={userData.projects_users}\n        renderItem={renderItem}\n        keyExtractor={item => item.id}\n      />\n      <Text>projects</Text>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      // justifyContent: 'center',\n    },\n    userimage: {\n      borderRadius: \"100%\",\n      width: 100,\n      height: 100\n    },\n    Button: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80vw'\n    },\n    scrollView: {\n      width: '100%',\n      padding: 10,\n    },\n    item: {\n      borderRadius: 10,\n      backgroundColor: 'lightgreen',\n      padding: 10,\n      margin: 10,\n    },\n    fail: {\n      borderRadius: 10,\n      backgroundColor: 'red',\n      padding: 10,\n      margin: 10,\n    }\n  });"]},"metadata":{},"sourceType":"module"}