{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../Home\";\nimport ProfileScreen from \"./profile\";\nimport ProjectsScreen from \"./projects\";\nimport AchievementsScreen from \"./achievements\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Index(_ref) {\n  var route = _ref.route;\n  var userData = route.params.userData;\n  console.log(userData);\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Profile\",\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarShowLabel: false,\n        tabBarStyle: {\n          position: 'absolute',\n          bottom: 25,\n          left: 20,\n          right: 20,\n          elevation: 0,\n          borderRadius: 15,\n          height: 70\n        },\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'Profile') {\n            iconName = focused ? 'person-circle' : 'person-circle-outline';\n          } else if (route.name === 'Projects') {\n            iconName = focused ? 'folder-open' : 'folder-open-outline';\n          } else if (route.name === 'Achievements') {\n            iconName = focused ? 'trophy' : 'trophy-outline';\n          } else if (route.name === 'Home') {\n            iconName = focused ? 'search-circle' : 'search-circle-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'green',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      },\n      initialParams: {\n        userData: userData\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Projects\",\n      component: ProjectsScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Achievements\",\n      component: AchievementsScreen,\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    padding: 10\n  },\n  userimage: {\n    borderRadius: \"100%\",\n    width: 100,\n    height: 100\n  },\n  Button: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '80vw'\n  }\n});","map":{"version":3,"sources":["/goinfre/oes-safi/swifty-companion/components/Infos/index.js"],"names":["React","createBottomTabNavigator","HomeScreen","ProfileScreen","ProjectsScreen","AchievementsScreen","Ionicons","Tab","Index","route","userData","params","console","log","tabBarShowLabel","tabBarStyle","position","bottom","left","right","elevation","borderRadius","height","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerShown","styles","StyleSheet","create","container","flex","alignItems","padding","userimage","width","Button","backgroundColor","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from '../Home';\nimport ProfileScreen from './profile';\nimport ProjectsScreen from './projects';\nimport AchievementsScreen from './achievements';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst Tab = createBottomTabNavigator();\n\n\nexport default function Index({ route }) {\n  const { userData } = route.params;\n\n  console.log(userData);\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Profile\"\n      screenOptions={({ route }) => ({\n        tabBarShowLabel: false,\n        tabBarStyle: {\n            position: 'absolute',\n            bottom: 25,\n            left: 20,\n            right: 20,\n            elevation: 0,\n            borderRadius: 15,\n            height:70,\n          },\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Profile') {\n              iconName = focused ? 'person-circle' : 'person-circle-outline';\n            } else if (route.name === 'Projects') {\n              iconName = focused ? 'folder-open' : 'folder-open-outline';\n            } else if (route.name === 'Achievements') {\n              iconName = focused ? 'trophy' : 'trophy-outline';\n            } else if (route.name === 'Home') {\n              iconName = focused ? 'search-circle' : 'search-circle-outline';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: 'green',\n          tabBarInactiveTintColor: 'gray',\n      })\n    }\n    >\n      <Tab.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false}} />\n      <Tab.Screen name=\"Profile\" component={ProfileScreen} options={{ headerShown: false}}  initialParams={{userData: userData}} />\n      <Tab.Screen name=\"Projects\" component={ProjectsScreen} options={{ headerShown: false}} />\n      <Tab.Screen name=\"Achievements\" component={AchievementsScreen} options={{ headerShown: false}} />\n    </Tab.Navigator>\n  )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      // justifyContent: 'center',\n      padding: 10,\n    },\n    userimage: {\n      borderRadius: \"100%\",\n      width: 100,\n      height: 100\n    },\n    Button: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '80vw'\n    },\n  });"]},"metadata":{},"sourceType":"module"}